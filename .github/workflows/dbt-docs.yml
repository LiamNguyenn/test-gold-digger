name: Deploy dbt Docs

on:
  push:
    branches:
    - main
#    paths:
#    - 'dbt_fivetran/**'

jobs:
  pr-merged:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout get latest code'
      uses: actions/checkout@v3

#    - name: 'Setup python'
#      uses: actions/setup-python@v4
#      with:
#        python-version-file: 'pyproject.toml'
#        cache-dependency-path: 'poetry.lock'
#
#    - name: 'Install Poetry'
#      uses: snok/install-poetry@v1
#      with:
#        virtualenvs-create: true
#        virtualenvs-in-project: true
#        installer-parallel: true
#
#    - name: 'Load cached venv'
#      id: cached-poetry-dependencies
#      uses: actions/cache@v3
#      with:
#        path: .venv
#        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
#
#    - name: 'Install dependencies'
#      if: steps.cp_poetry.outputs.cache-hit != 'true'
#      run: poetry install --no-interaction --no-root

    # run dbt docs command
#    - name: 'Run dbt docs'
#      shell: bash -l {0}
#      env:
#        DBT_PROFILES_DIR: ${{ github.workspace }}/dbt_fivetran
#        DBT_PROJECT_DIR: ${{ github.workspace }}/dbt_fivetran
#        DBT_REDSHIFT_HOST: ${{ secrets.REDSHIFT_HOST }}
#        DBT_USER: ${{ secrets.REDSHIFT_USERNAME }}
#        DBT_PASSWORD: ${{ secrets.REDSHIFT_PASSWORD }}
#        DBT_DATABASE: dev
#        DBT_DEV_SCHEMA: ci
#      run: |
#        poetry run dbt deps
#        poetry run dbt docs generate --target prod

    - name: 'Create html file'
      run: |
          mkdir website-clone
          echo ${{ github.workspace }}
          ls -la
          cd website-clone
          echo "<html><head><title>haha</title></head><body><h1>haha, World!</h1><p>This is a simple HTML file generated using the command line.</p></body></html>" > index.html
          ls -la

    # push publish dir to gh-pages branch
    - name: 'Push to gh-pages'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: './website-clone/'
        force_orphan: true
        commit_message: 'dbt docs generated on ${{ github.sha }}'
        allow_empty_commit: true
        keep_files: true
